# Docker-compose definition for development

version: '2.4'

services:
    db:
        image: postgres
        environment:
          - POSTGRES_DB=${SQL_DATABASE}
          - POSTGRES_USER=${SQL_USER}
          - POSTGRES_PASSWORD=${SQL_PASSWORD}
          - PGHOST=${SQL_HOST}
          - PGPORT=${SQL_PORT}
          - PGUSER=${SQL_USER}
          - PGDATABASE=${SQL_DATABASE}
          - PGPASSWORD=${SQL_PASSWORD}
        volumes:
          - db_data:/var/lib/postgresql/data/
          - db_backup:/backups/
        healthcheck:
          test: ["CMD-SHELL", "pg_isready"]
          interval: 5s
          timeout: 5s
          retries: 5
    ip2country:
        image: extrawurst/ip2country:latest
        ports:
         - 8854:5000
    server:
        build:
          context: ./backend
          dockerfile: DockerfileDevelop
        depends_on:
          db:
            condition: service_healthy
          ip2country:
            condition: service_started
        volumes:
          - type: bind
            source: ./backend
            target: /server
        environment:
          - AML_DEBUG=${AML_DEBUG}
          - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
          - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
          - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
          - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
          - AML_LOCATION_PROVIDER=${AML_LOCATION_PROVIDER}
          - SENTRY_DSN=${SENTRY_DSN}
          - SQL_DATABASE=${SQL_DATABASE}
          - SQL_USER=${SQL_USER}
          - SQL_PASSWORD=${SQL_PASSWORD}
          - SQL_HOST=${SQL_HOST}
        ports:
          - 8000:8000
        command: bash -c "python manage.py migrate && python manage.py bootstrap && python manage.py runserver 0.0.0.0:8000"
    client:
        build:
          context: ./frontend
          dockerfile: DockerfileDevelop
        volumes:
          - type: bind
            source: ./frontend
            target: /client
        environment:
          - REACT_APP_API_ROOT=${REACT_APP_API_ROOT}
          - REACT_APP_EXPERIMENT_SLUG=${REACT_APP_EXPERIMENT_SLUG}
          - REACT_APP_AML_HOME=${REACT_APP_AML_HOME}
          - REACT_APP_LOGO_URL=${REACT_APP_LOGO_URL}
          - REACT_APP_HTML_FAVICON=${REACT_APP_HTML_FAVICON}
          - REACT_APP_HTML_PAGE_TITLE=${REACT_APP_HTML_PAGE_TITLE}
          - REACT_APP_HTML_OG_DESCRIPTION=${REACT_APP_HTML_OG_DESCRIPTION}
          - REACT_APP_HTML_OG_IMAGE=${REACT_APP_HTML_OG_IMAGE}
          - REACT_APP_HTML_OG_TITLE=${REACT_APP_HTML_OG_TITLE}
          - REACT_APP_HTML_OG_URL=${REACT_APP_HTML_OG_URL}
          - REACT_APP_HTML_BODY_CLASS=${REACT_APP_HTML_BODY_CLASS}
          - REACT_APP_SENTRY_DSN=${REACT_APP_SENTRY_DSN}
        ports:
          - 3000:3000
          - 6006:6006
        command: sh -c "yarn scss && yarn start"
volumes:
    db_data:
    db_backup:
