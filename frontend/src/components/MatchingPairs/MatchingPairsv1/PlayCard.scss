@import "../../scss/utils.scss";

@keyframes memory {
    20% {
        transform: scale(1.15);
    }
    40% {
        transform: scale(1);
    }
    60% {
        transform: scale(1.1);
    }
    80% {
        transform: scale(1);
    }
    95% {
        transform: scale(1.05);
    }
    100% {
        transform: scale(1);
    }
}

@keyframes lucky {
    40% {
        transform: scale(1.15);
    }
    80% {
        transform: scale(1);
    }
    95% {
        transform: scale(1.05);
    }
    100% {
        transform: scale(1);
    }
}

@keyframes nomatch {
    10% {
        transform: rotate(13deg);
    }
    20% {
        transform: rotate(-13deg);
    }
    30% {
        transform: rotate(11deg);
    }
    40% {
        transform: rotate(-11deg);
    }
    50% {
        transform: rotate(10deg);
    }
    60% {
        transform: rotate(-10deg);
    }
    70% {
        transform: rotate(8deg);
    }
    80% {
        transform: rotate(-8deg);
    }
    95% {
        transform: rotate(5deg);
    }
    100% {
        transform: rotate(0deg);
    }
}

.aha__play-card {
    // Note that the cards need not be square: this is a consequence
    // of being in a square container
    
    cursor: pointer;
    overflow: hidden;
    border-radius: 20%;
    box-shadow: 0 0 2em rgba(0,0,0,0.1);
    
    transition: transform ease-out 400ms, box-shadow ease-out 400ms;
    transform-style: preserve-3d;
    perspective: 1000px; // Required for 3d flipping effect

    & > div {
        // Ensure the back and front fill the entire card. 
        width: 100%;
        height: 100%;
    }

    &:hover {
        transform: rotateY(30deg) rotateX(3deg);
    }

    &.turned {
        // Flip the card 180deg
        transform: rotateY(180deg);
    }

    &.disabled {
        pointer-events: none;
        
        // Format card as empty slot
        @extend .bg-inset-xs, .sharp-border;
        
        // Prevent the card from flipping back again:
        transform: rotateY(180deg); 
        
        .back {
            background: unset !important;
        }
    }

    &.fbnomatch, &.fbmisremembered {
        animation-duration: 0.7s;
        animation-name: nomatch;
        animation-iteration-count: 1;
    }

    &.fblucky {
        animation-duration: 0.55s;
        animation-name: lucky;
        animation-iteration-count: 1;
    }

    &.fbmemory {
        animation-duration: 0.8s;
        animation-name: memory;
        animation-iteration-count: 1;
    }

    &.noevents {
        pointer-events: none;
    }

    .front {
        &--visual {
            overflow: hidden;

            img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                aspect-ratio: 1/1;
            }
        }
    }

    .back {
        @extend .bg-subtle-yellow-pink;
        display: flex;
        justify-content: center;
    }
}
