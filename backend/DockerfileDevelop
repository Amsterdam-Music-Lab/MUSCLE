# This base Docker image is used to build a development image
# which is used in local development and CI/CD pipelines
FROM docker.io/python:3.11 AS base
ENV PYTHONUNBUFFERED=1
RUN apt-get -y update && apt-get install -y ffmpeg gettext

WORKDIR /server
COPY requirements/dev.txt /server/
RUN pip install -r dev.txt

# This graphviz Docker image is derived from the base image
# and installs extra dependencies for generating database ER diagrams
FROM base AS graphviz
RUN apt-get -y update && apt-get install -y graphviz graphviz-dev

# For generating database ER diagrams
RUN pip install pygraphviz django-extensions

# Generate graphviz image
# See also https://django-extensions.readthedocs.io/en/latest/graph_models.html
# for more options
ENTRYPOINT ["python", "manage.py", "graph_models", "-a", "-g", "-o", "/server/static/model_graph.png"]

# Debugging image
FROM base AS debug

# install debugpy
RUN pip install debugpy

# Remove the ENTRYPOINT and use CMD instead
# This allows the command to be overridden in docker-compose
CMD ["python", "-m", "debugpy", "--listen", "0.0.0.0:5678", "--wait-for-client", "manage.py", "runserver", "0.0.0.0:8000"]
