# Generated by Django 3.2.16 on 2023-01-02 13:54

from django.db import migrations

def populate_sections(apps, schema_editor):
    ExperimentSection = apps.get_model('experiment', 'Section')
    Section = apps.get_model('section', 'Section')
    Playlist = apps.get_model('section', 'Playlist')
    for original_section in ExperimentSection.objects.all():
        original_playlist = original_section.playlist
        try:
            linked_playlist = Playlist.objects.get(
                name=original_playlist.name
            )
        except Playlist.DoesNotExist:
            linked_playlist = Playlist.objects.create(
                name=original_playlist.name,
                process_csv=original_playlist.process_csv,
                csv=original_playlist.csv
            )
            linked_playlist.save()
        new_section = Section.objects.create(
            playlist=linked_playlist,
            artist=original_section.artist,
            name=original_section.name,
            start_time=original_section.start_time,
            duration=original_section.duration,
            filename=original_section.filename,
            restrict_to_nl=original_section.restrict_to_nl,
            play_count=original_section.play_count,
            code=original_section.code,
            tag=original_section.tag,
            group=original_section.group
        )
        new_section.save()

def backwards_populate_sections(apps, schema_editor):
    ExperimentSection = apps.get_model('experiment', 'Section')
    Section = apps.get_model('section', 'Section')
    ExperimentPlaylist = apps.get_model('experiment', 'Playlist')
    for new_section in Section.objects.all():
        new_playlist = new_section.playlist
        try:
            linked_playlist = ExperimentPlaylist.objects.get(
                name=new_playlist.name
            )
        except ExperimentPlaylist.DoesNotExist:
            linked_playlist = ExperimentPlaylist.objects.create(
                name=new_playlist.name,
                process_csv=new_playlist.process_csv,
                csv=new_playlist.csv
            )
            linked_playlist.save()
        original_section = ExperimentSection.objects.create(
            playlist=linked_playlist,
            artist=new_section.artist,
            name=new_section.name,
            start_time=new_section.start_time,
            duration=new_section.duration,
            filename=new_section.filename,
            restrict_to_nl=new_section.restrict_to_nl,
            play_count=new_section.play_count,
            code=new_section.code,
            tag=new_section.tag,
            group=new_section.group
        )
        original_section.save()


class Migration(migrations.Migration):

    dependencies = [
        ('section', '0001_initial'),
        ('experiment', '0012_participant_access_info'),
    ]

    operations = [
        migrations.RunPython(populate_sections, backwards_populate_sections)
    ]
