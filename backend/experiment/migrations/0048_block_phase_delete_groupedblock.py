# Generated by Django 4.2.14 on 2024-07-19 13:35

from django.db import migrations, models
import django.db.models.deletion


def migrate_grouped_blocks(apps, schema_editor):
    GroupedBlock = apps.get_model("experiment", "GroupedBlock")
    for index, grouped_block in enumerate(GroupedBlock.objects.all()):
        phase = grouped_block.phase
        block = grouped_block.block

        # check if this block already has a phase associated to it
        # (phase_id / phase is not null)
        exists = block.phase is not None

        # if it does, duplicate the block and set the phase
        if exists:
            block.pk = None
            block.slug = f"{block.slug}-{index}"

        block.index = grouped_block.index
        block.phase = phase
        block.save()


def reverse_migrate_grouped_blocks(apps, schema_editor):
    Block = apps.get_model("experiment", "Block")
    GroupedBlock = apps.get_model("experiment", "GroupedBlock")
    for block in Block.objects.all():
        if not block.phase:
            continue

        grouped_block = GroupedBlock.objects.create(
            phase=block.phase,
            block=block,
        )
        grouped_block.save()


class Migration(migrations.Migration):
    atomic = False

    dependencies = [
        ("experiment", "0047_rename_experimentcollection_experiment_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="block",
            name="phase",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="blocks",
                to="experiment.phase",
            ),
        ),
        migrations.AddField(
            model_name="block",
            name="index",
            field=models.IntegerField(
                default=0,
                help_text="Index of the block in the phase. Lower numbers come first.",
            ),
        ),
        migrations.RunPython(
            migrate_grouped_blocks,
            reverse_migrate_grouped_blocks,
            atomic=True,
        ),
        migrations.DeleteModel(
            name="GroupedBlock",
        ),
    ]
