# Generated by Django 4.2.18 on 2025-03-17 11:14

from django.db import migrations



class Migration(migrations.Migration):

    def populate_block_translations(apps, schema_editor):
        Block = apps.get_model('experiment', 'Block')
        BlockTranslatedContent = apps.get_model('experiment', 'BlockTranslatedContent')
        for block in Block.objects.all():
            btcs = BlockTranslatedContent.objects.filter(block=block)
            new_translation_object = BlockTranslatedContent.objects.create(block=block, language='cy') # set fake language for now
            for btc in btcs.all():
                if btc.language in ['en', 'nl', 'pt']:
                    setattr(new_translation_object, f'name_{btc.language}', btc.name)
                    setattr(new_translation_object, f'description_{btc.language}', btc.description)
                if btc.language == 'zh':
                    setattr(new_translation_object, 'name_zh_hans', btc.name)
                    setattr(new_translation_object, 'description_zh_hans', btc.description)
            btcs.delete()

    def populate_experiment_translations(apps, schema_editor):
        Experiment = apps.get_model('experiment', 'Experiment')
        ExperimentTranslatedContent = apps.get_model('experiment', 'ExperimentTranslatedContent')
        for exp in Experiment.objects.all():
            etcs = ExperimentTranslatedContent.objects.filter(experiment=exp)
            new_translation_object = ExperimentTranslatedContent.objects.create(experiment=exp, language='cy') # set fake language for now
            for etc in etcs.all():
                if etc.language in ['en', 'nl', 'pt']:
                    setattr(new_translation_object, f'name_{etc.language}', etc.name)
                    setattr(new_translation_object, f'description_{etc.language}', etc.description)
                    setattr(new_translation_object, f'consent_{etc.language}', etc.consent)
                    setattr(new_translation_object, f'about_content_{etc.language}', etc.about_content)
                    setattr(new_translation_object, f'social_media_message_{etc.language}', etc.social_media_message)
                    setattr(new_translation_object, f'disclaimer_{etc.language}', etc.disclaimer)
                    setattr(new_translation_object, f'privacy_{etc.language}', etc.privacy)
                if etc.language == 'zh':
                    setattr(new_translation_object, 'name_zh_hans', etc.name)
                    setattr(new_translation_object, 'description_zh_hans', etc.description)
                    setattr(new_translation_object, 'consent_zh_hans', etc.consent)
                    setattr(new_translation_object, 'about_content_zh_hans', etc.about_content)
                    setattr(new_translation_object, 'social_media_message_zh_hans', etc.social_media_message)
                    setattr(new_translation_object, 'disclaimer_zh_hans', etc.disclaimer)
                    setattr(new_translation_object, 'privacy_zh_hans', etc.privacy)

            etcs.delete()


    dependencies = [
        ('experiment', '0065_add_modeltranslations'),
    ]

    operations = [
    ]
