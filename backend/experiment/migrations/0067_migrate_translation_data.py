# Generated by Django 4.2.18 on 2025-03-17 11:14

from django.db import migrations


class Migration(migrations.Migration):

    def populate_block_texts(apps, schema_editor):
        Block = apps.get_model('experiment', 'Block')
        BlockTranslatedContent = apps.get_model('experiment', 'BlockTranslatedContent')
        for block in Block.objects.all():
            btcs = BlockTranslatedContent.objects.filter(block=block)
            for btc in btcs.all():
                lang_code = 'zh_hans' if btc.language == 'zh' else btc.language
                if btc.language in ['en', 'nl', 'pt']:
                    setattr(block, f'name_{lang_code}', btc.name)
                    setattr(block, f'description_{lang_code}', btc.description)
                block.save()

    def create_block_translated_contents(apps, schema_editor):
        Block = apps.get_model('experiment', 'Block')
        BlockTranslatedContent = apps.get_model('experiment', 'BlockTranslatedContent')
        for block in Block.objects.all():
            for lang_code in ['en', 'nl', 'pt', 'zh_hans']:
                name = getattr(block, f'name_{lang_code}', '')
                if name:
                    language = 'zh' if lang_code == 'zh_hans' else lang_code
                    BlockTranslatedContent.objects.create(
                        block=block,
                        language=language,
                        name=name,
                        description=getattr(block, f'description_{lang_code}')
                    )

    def populate_experiment_texts(apps, schema_editor):
        Experiment = apps.get_model('experiment', 'Experiment')
        ExperimentTranslatedContent = apps.get_model('experiment', 'ExperimentTranslatedContent')
        for exp in Experiment.objects.all():
            etcs = ExperimentTranslatedContent.objects.filter(experiment=exp)
            min_index = etcs.order_by('index').first().index
            for etc in etcs.all():
                lang_code = 'zh_hans' if etc.language == 'zh' else etc.language
                if not etc.name and etc.index == min_index:
                    exp.name = etc.name
                    exp.description = etc.description
                    exp.consent = etc.consent
                    exp.about_content = etc.about_content
                    exp.social_media_message = (
                        etc.social_media_message
                    )
                    exp.disclaimer = etc.disclaimer
                    exp.privacy = etc.privacy

                if etc.language in ['en', 'nl', 'pt', 'zh']:
                    setattr(exp, f'name_{lang_code}', etc.name)
                    setattr(
                        exp,
                        f'description_{lang_code}',
                        etc.description,
                    )
                    setattr(exp, f'consent_{lang_code}', etc.consent)
                    setattr(
                        exp,
                        f'about_content_{lang_code}',
                        etc.about_content,
                    )
                    setattr(
                        exp,
                        f'social_media_message_{lang_code}',
                        etc.social_media_message,
                    )
                    setattr(
                        exp,
                        f'disclaimer_{lang_code}',
                        etc.disclaimer,
                    )
                    setattr(exp, f'privacy_{lang_code}', etc.privacy)
                etc.index = 42  # set to an arbitray largish value
                etc.save()
                exp.save()

    def create_experiment_translated_contents(apps, schema_editor):
        Experiment = apps.get_model('experiment', 'Block')
        ExperimentTranslatedContent = apps.get_model('experiment', 'BlockTranslatedContent')
        for experiment in Experiment.objects.all():
            for lang_code in ['en', 'nl', 'pt', 'zh_hans']:
                name = getattr(experiment, f'name_{lang_code}', '')
                if name:
                    language = 'zh' if lang_code == 'zh_hans' else lang_code
                    index = 0 if experiment.name == name else 1 # assign lowest index if main field is equal to language
                    ExperimentTranslatedContent.objects.create(
                        experiment=experiment,
                        index=index,
                        language=language,
                        name=name,
                        description=getattr(experiment, f'description_{lang_code}', ''),
                        consent=getattr(experiment, f'consent_{lang_code}', ''),
                        about_content=getattr(experiment, f'about_content_{lang_code}'),
                        socical_media_message=getattr(experiment, f'social_media_message_{lang_code}', ''),
                        disclaimer=getattr(experiment, f'disclaimer_{lang_code}', ''),
                        privacy=getattr(experiment, f'privacy_{lang_code}', '')
                    )

    dependencies = [
        ('experiment', '0066_add_translation_fields'),
    ]

    operations = [
        migrations.RunPython(populate_block_texts, create_block_translated_contents),
        migrations.RunPython(
            populate_experiment_texts, create_experiment_translated_contents
        ),
    ]
