#!/bin/bash

# Path to the hosts file
HOSTS_FILE="/etc/hosts"

YELLOW_BEGIN="\e[33m"
YELLOW_END="\e[0m"
GREEN_BEGIN="\e[32m"
GREEN_END="\e[0m"

# Function to remove existing hosts entries
remove_existing_hosts_entries() {
    printf $"${GREEN_BEGIN}"
    echo -e "\nRemoving existing entries for MUSCLE..."
    printf "${GREEN_END}"
    # Check if we are on macOS and adjust the sed command accordingly
    if [[ "$OSTYPE" == "darwin"* ]]; then
        sudo sed -i '' '/# MUSCLE/,/# END MUSCLE/d' "$HOSTS_FILE"
    else
        sudo sed -i '/# MUSCLE/,/# END MUSCLE/d' "$HOSTS_FILE"
    fi
}

# Function to add hosts entries
add_hosts_entries() {
    printf $"${GREEN_BEGIN}"
    echo -e "\nAdding the following entries to your hosts file:"
    printf "${GREEN_END}"
    for entry in "${HOST_ENTRIES[@]}"; do
        echo "$entry"
    done
    for entry in "${HOST_ENTRIES[@]}"; do
        echo "$entry" | sudo tee -a "$HOSTS_FILE" > /dev/null
    done
}

# Replace AML_ALLOWED_HOSTS and REACT_APP_API_ROOT values in .env file
replace_env_variables() {
    # Get the backend domain without port number (if any) for AML_ALLOWED_HOSTS
    backend_domain_without_port="${backend_domain%:*}"

    printf $"${GREEN_BEGIN}"
    echo -e "\nReplacing AML_ALLOWED_HOSTS and REACT_APP_API_ROOT values in .env file..."
    printf "${GREEN_END}"
    # Replace AML_ALLOWED_HOSTS="old_value" with AML_ALLOWED_HOSTS="new_value"
    sed -i '' "s/AML_ALLOWED_HOSTS=.*/AML_ALLOWED_HOSTS=$main_domain,$backend_domain_without_port,localhost/g" .env
    # Replace REACT_APP_API_ROOT="old_value" with REACT_APP_API_ROOT="new_value"
    sed -i '' "s/REACT_APP_API_ROOT=.*/REACT_APP_API_ROOT=http:\/\/$backend_domain/g" .env
}

# Function to get domain selection
get_domain_selection() {
    local PS3="Please choose a domain for $1: "
    local options=("$2" "$3" "other (type a custom domain yourself)")
    local domain

    select opt in "${options[@]}"; do
        case $REPLY in
            1) domain=$2; break ;;
            2) domain=$3; break ;;
            *) domain=$REPLY; break ;;
        esac
    done

    echo "$domain"
}

# Main domain selection
printf $"${YELLOW_BEGIN}"
echo -e "\n# Define main site domain (the user interface)"
printf "${YELLOW_END}"
main_domain=$(get_domain_selection "main site" "muscle.local" "localhost:3000")

printf "\nYou have chosen ${GREEN_BEGIN}$main_domain${GREEN_END} as your main site domain.\n"

# Backend domain selection
printf $"${YELLOW_BEGIN}"
echo -e "\n# Define backend domain (the admin interface)"
printf "${YELLOW_END}"
backend_domain=$(get_domain_selection "backend" "backend.muscle.local" "localhost:8000")

printf "\nYou have chosen ${GREEN_BEGIN}$backend_domain${GREEN_END} as your backend domain.\n"

# Define hosts entries
HOST_ENTRIES=(
    "# MUSCLE"
    "127.0.0.1 $main_domain"
    "127.0.0.1 $backend_domain"
    "# END MUSCLE"
)

printf $"${YELLOW_BEGIN}"
echo -e "\nYou may be asked for your password.\n"
printf "${YELLOW_END}"

# Backup the original hosts file
echo "Backing up your hosts file to ${HOSTS_FILE}.bak..."
sudo cp "$HOSTS_FILE" "${HOSTS_FILE}.bak"

# Remove existing MUSCLE entries
remove_existing_hosts_entries

# Add new MUSCLE entries
add_hosts_entries

# Replace AML_ALLOWED_HOSTS and REACT_APP_API_ROOT values in .env
replace_env_variables

printf "\nDone! You can now access the MUSCLE platform at the following addresses:\n1) User interface:      ${GREEN_BEGIN}http://$main_domain${GREEN_END}\n2) Admin interface:     ${GREEN_BEGIN}http://$backend_domain/admin${GREEN_END}.\n"